{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","beforeState","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","Fragment","ReactDOM","render","document","getElementById"],"mappings":"4MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaI,OAEI,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAW,OAAIP,GAAJ,mBAAmBO,OAC5CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,kCAAMJ,KACN,qBAAKK,IAAKf,EAAKgB,IAAKN,QCkBjBO,EArBQ,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACrB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAItB,CAACpB,IAEGqB,EDjB0BK,CAAa1B,GAAtCoB,EAAR,EAAQA,QAAcP,EAAtB,EAAiBN,KAEjB,OACI,qCACI,oBAAIS,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEX7BgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,yBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,eAAC,IAAM4C,SAAP,WACI,8CACA,cAAC,EAAD,CAAa5C,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACIA,SAAUA,GACLA,Y,MChBjC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.18de4b1c.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nexport const AddCategory = ({setCategories}) => {\nconst [inputValue, setInputValue] = useState('');\n\nconst handleInputChange = (e) => {\n    setInputValue(e.target.value)\n}\n\n    const handleSubtmit = (e) => {\n        e.preventDefault();//previene que la pag se regargue al enviar el formulario\n        if(inputValue.trim().length > 2){\n            setCategories(beforeState =>[inputValue, ...beforeState]);\n            setInputValue('');\n        } \n}\n    return (\n        \n        <form onSubmit={handleSubtmit}>\n            <input \n                type='text'\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n            \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=1SLsqMBWwMqmk81szK8m1PWMwAL4NK9r`;\n    const resp = await fetch (url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    // console.log({id, title, url});\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <p> { title }</p>\n            <img src={url} alt={title} />\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from '../components/GifGridItem';\n\nexport const GifGrid = ({category}) => {\n    const { loading, data:images } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n            <div className=\"card-grid\">\n                    {\n                        images.map( img => (\n                            <GifGridItem \n                                key={ img.id }\n                                {...img }\n                            />\n                        ))\n                    }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n    \n    useEffect( () => {\n        \n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data:imgs,\n                    loading: false\n                })\n            })\n\n    }, [category] )\n\n    return state; //{data:[], loading:true}\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Full metal ALchimist']);\n    // const handleAdd = () => {\n    //     setCategories( [...categories ,'HunterXHunter']); //Normal\n    //     //setCategories(cats=> [...cats, 'HunterXHunter']); callback\n    // }\n\n    return (\n        <React.Fragment>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            category={category} \n                            key={category}\n                        />\n                    ))\n                }\n            </ol>\n\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}